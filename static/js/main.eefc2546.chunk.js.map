{"version":3,"sources":["components/HeaderPage/StyledComponent.js","components/HeaderPage/HeaderPage.jsx","components/FormSearch/StyledComponent.js","components/FormSearch/FormSearch.jsx","components/Section/StyledComponent.js","components/Section/Section.jsx","components/ImagesListRender/StyledComponent.js","image/default-image.jpg","components/ImagesListRender/ImagesListRender.jsx","components/Spinner/StyledComponent.js","components/Spinner/Spinner.jsx","components/Notification/Notification.jsx","components/Modal/StyledComponent.js","components/Modal/Modal.jsx","components/ButtonLoadMore/StyledComponent.js","components/ButtonLoadMore/ButtonLoadMore.jsx","components/LoadInfinityControl/StyledComponent.js","components/LoadInfinityControl/LoadInfinityControl.jsx","components/ButtonScrollTop/StyledComponent.js","components/ButtonScrollTop/ButtonScrollTop.jsx","App.jsx","service/ServiceApi.js","service/ErrorInfo.js","index.js"],"names":["Header","styled","header","HeaderPage","children","id","Form","form","Input","input","FormSearch","onSearch","useState","inputValue","setInputValue","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","SectionContent","section","Section","bounceAnimation","keyframes","tada","List","ul","ListItem","li","Image","img","Overlay","div","StatisticBlock","StatisticItem","span","IcoView","ImageListRender","imagesArr","onGetLargeImg","map","webformatURL","DefaultImage","largeImageURL","tags","likes","views","downloads","onClick","className","icon","faSearch","color","size","faEye","faThumbsUp","faSave","src","alt","SpinnerBlock","Spinner","height","width","Notification","message","animIn","rollIn","animOut","rollOut","Modal","ContentBlock","ButtonClose","button","ModalWindows","onCloseModal","imgUrl","isOut","setIsOut","timeOut","useRef","useEffect","document","body","style","overflow","window","addEventListener","handlerEscape","removeEventListener","clearTimeout","current","code","fadeoutModal","timeOutId","setTimeout","styledClose","styledOpen","faTimesCircle","onLoad","Button","ButtonLoadMore","CheckboxWrap","label","Checkbox","CheckboxTitle","LoadInfinityControl","onCheckChange","isInfinityLoad","setInfinityLoad","checked","ButtonScrollsTop","a","ButtonScrollTop","href","faChevronCircleUp","App","images","setImages","formSearch","setFormSearch","page","setPage","loading","setLoading","error","setError","largeImgUrl","setLargeImgUrl","isFullHits","setIsFullHits","isInfinityScroll","setIsInfinityScroll","fethApi","scrollTo","top","documentElement","scrollHeight","behavior","query","axios","get","then","response","data","ServiceApi","hits","length","info","title","text","delay","total","prevImages","prevPage","catch","finally","observerApi","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","console","log","rootMargin","threshold","trackingObj","querySelector","observe","registrationIntersectionObserver","urlImgLarge","ReactDom","render","StrictMode"],"mappings":"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","file":"static/js/main.eefc2546.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Header = styled.header`\n  padding: 50px 0px 20px;\n  width: 100%;\n  background-color: grey;\n`;\n\nexport { Header };\n","import React from 'react';\nimport { Header } from './StyledComponent';\n\nexport default function HeaderPage({ children }) {\n  return (\n    <Header id=\"page-header\">\n      <nav>{children}</nav>\n    </Header>\n  );\n}\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  max-width: 350px;\n  margin: 0 auto;\n  margin-bottom: 10px;\n`;\nconst Input = styled.input`\n  width: 100%;\n  height: 30px;\n  border: 2px solid black;\n  border-radius: 0.5rem;\n  padding-left: 10px;\n  font-size: 1rem;\n`;\n\nexport { Form, Input };\n","import { useState } from 'react';\nimport { Form, Input } from './StyledComponent';\nimport PropTypes from 'prop-types';\n\nexport default function FormSearch({ onSearch }) {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInput = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handlerForm = e => {\n    e.preventDefault();\n\n    onSearch(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <Form onSubmit={handlerForm}>\n      <Input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInput}\n        placeholder=\"Search images and photos\"\n      />\n    </Form>\n  );\n}\n\nFormSearch.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst SectionContent = styled.section`\n  padding: 50px 0px 50px;\n  max-width: 1000px;\n  margin: 0 auto;\n`;\n\nexport { SectionContent };\n","import React from 'react';\nimport { SectionContent } from './StyledComponent';\n\nexport default function Section({ children }) {\n  return <SectionContent>{children}</SectionContent>;\n}\n","import styled, { keyframes } from 'styled-components';\nimport { tada } from 'react-animations';\n\nconst bounceAnimation = keyframes`${tada}`;\n\nconst List = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst ListItem = styled.li`\n  position: relative;\n  width: 300px;\n  height: 200px;\n  margin-bottom: 25px;\n\n  &:hover .overlay {\n    visibility: visible;\n    opacity: 1;\n  }\n  &:hover {\n    box-shadow: 10px 5px 5px grey;\n    border: 3px solid green;\n    animation: 2s ${bounceAnimation} ease-in-out;\n  }\n  cursor: zoom-in;\n`;\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n`;\nconst Overlay = styled.div`\n  visibility: hidden;\n  opacity: 0;\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0.7);\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  transition-property: opacity;\n  transition-duration: 0.3s;\n`;\nconst StatisticBlock = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  bottom: 5px;\n`;\nconst StatisticItem = styled.span`\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: #fff;\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\nconst IcoView = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport {\n  List,\n  ListItem,\n  Image,\n  Overlay,\n  StatisticBlock,\n  StatisticItem,\n  IcoView,\n};\n","export default __webpack_public_path__ + \"static/media/default-image.2e01288c.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEye,\n  faThumbsUp,\n  faSave,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  List,\n  ListItem,\n  Image,\n  Overlay,\n  StatisticBlock,\n  StatisticItem,\n  IcoView,\n} from './StyledComponent';\nimport DefaultImage from '../../image/default-image.jpg';\n\nexport default function ImageListRender({ imagesArr, onGetLargeImg }) {\n  return (\n    <List>\n      {imagesArr.map(\n        ({\n          id,\n          webformatURL = DefaultImage,\n          largeImageURL,\n          tags,\n          likes,\n          views,\n          downloads,\n        }) => (\n          <ListItem key={id} onClick={() => onGetLargeImg(largeImageURL)}>\n            <Overlay className=\"overlay\">\n              <IcoView>\n                {' '}\n                <FontAwesomeIcon icon={faSearch} color=\"green\" size=\"3x\" />\n              </IcoView>\n              <StatisticBlock>\n                <StatisticItem>\n                  <FontAwesomeIcon icon={faEye} color=\"green\" /> {views}\n                </StatisticItem>\n                <StatisticItem>\n                  <FontAwesomeIcon icon={faThumbsUp} color=\"green\" /> {likes}\n                </StatisticItem>\n                <StatisticItem>\n                  <FontAwesomeIcon icon={faSave} color=\"green\" /> {downloads}\n                </StatisticItem>\n              </StatisticBlock>\n            </Overlay>\n            <Image src={webformatURL} alt={tags} />\n          </ListItem>\n        ),\n      )}\n    </List>\n  );\n}\n\nImageListRender.propTypes = {\n  imagesArr: PropTypes.array.isRequired,\n  onGetLargeImg: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst SpinnerBlock = styled.div`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n`;\n\nexport { SpinnerBlock };\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { SpinnerBlock } from './StyledComponent';\n\nexport default function Spinner() {\n  return (\n    <SpinnerBlock>\n      <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\n    </SpinnerBlock>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <div>{message}</div>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled, { keyframes } from 'styled-components';\nimport { rollIn, rollOut } from 'react-animations';\n\nconst animIn = keyframes`${rollIn}`;\nconst animOut = keyframes`${rollOut}`;\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: contain;\n`;\nconst Modal = styled.div`\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 40px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.7);\n`;\nconst ContentBlock = styled.div`\n  position: relative;\n  opacity: 0;\n  transition-property: opacity;\n  transition-delay: 0.3s;\n  &.open {\n    opacity: 1;\n    animation: 1s ${animIn};\n  }\n\n  &.close {\n    animation: 0.6s ${animOut};\n    opacity: 0;\n  }\n`;\nconst ButtonClose = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: transparent;\n  border: 2px solid grey;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0;\n  transition-property: opacity;\n  transition-delay: 4s;\n  &.open {\n    opacity: 1;\n  }\n  &.close {\n    opacity: 0;\n  }\n`;\n\nexport { Image, Modal, ContentBlock, ButtonClose };\n","import { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Image, Modal, ContentBlock, ButtonClose } from './StyledComponent';\nimport PropTypes from 'prop-types';\n\nexport default function ModalWindows({ onCloseModal, imgUrl }) {\n  const [isOut, setIsOut] = useState(null);\n  const timeOut = useRef();\n\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    window.addEventListener('keydown', handlerEscape);\n    return () => {\n      document.body.style.overflow = 'visible';\n      window.removeEventListener('keydown', handlerEscape);\n      clearTimeout(timeOut.current);\n    };\n  }, []);\n\n  const handlerEscape = e => {\n    if (e.code === 'Escape') {\n      fadeoutModal();\n    }\n  };\n\n  const fadeoutModal = () => {\n    setIsOut(true);\n    const timeOutId = setTimeout(() => onCloseModal(), 500);\n    timeOut.current = timeOutId;\n  };\n\n  const onLoadImage = () => {\n    setIsOut(false);\n  };\n\n  const styledClose = 'close';\n  const styledOpen = 'open';\n  return (\n    <Modal>\n      <ContentBlock className={isOut ? styledClose : styledOpen}>\n        <ButtonClose\n          className={isOut ? styledClose : styledOpen}\n          type=\"button\"\n          onClick={() => {\n            fadeoutModal();\n          }}\n        >\n          <FontAwesomeIcon icon={faTimesCircle} color=\"green\" size=\"2x\" />\n        </ButtonClose>\n        <Image src={imgUrl} onLoad={onLoadImage} />\n      </ContentBlock>\n    </Modal>\n  );\n}\n\nModalWindows.propTypes = {\n  imgUrl: PropTypes.string.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  display: block;\n  padding: 20px 10px;\n  max-width: 250px;\n  margin: 0 auto;\n  border: none;\n  border-radius: 0.5rem;\n  background-color: green;\n  color: #fff;\n  font-size: 0.8rem;\n  font-weight: 600;\n  cursor: pointer;\n`;\n\nexport { Button };\n","import React from 'react';\nimport { Button } from './StyledComponent';\nimport PropTypes from 'prop-types';\n\nexport default function ButtonLoadMore({ onLoad }) {\n  return (\n    <Button type=\"button\" onClick={() => onLoad()}>\n      LoadMore\n    </Button>\n  );\n}\n\nButtonLoadMore.propTypes = {\n  onLoad: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst CheckboxWrap = styled.label`\n  width: max-content;\n  display: block;\n  margin: 0 auto;\n`;\nconst Checkbox = styled.input`\n  width: 17px;\n  height: 17px;\n`;\nconst CheckboxTitle = styled.span`\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: green;\n  margin-right: 5px;\n`;\n\nexport { CheckboxWrap, Checkbox, CheckboxTitle };\n","import { useState } from 'react';\nimport { CheckboxWrap, Checkbox, CheckboxTitle } from './StyledComponent';\nimport PropTypes from 'prop-types';\n\nexport default function LoadInfinityControl({ onCheckChange }) {\n  const [isInfinityLoad, setInfinityLoad] = useState(false);\n\n  const handleCheckbox = e => {\n    const { checked } = e.target;\n    setInfinityLoad(checked);\n    onCheckChange(checked);\n  };\n  return (\n    <CheckboxWrap>\n      <CheckboxTitle>use infinity scroll:</CheckboxTitle>\n      <Checkbox\n        type=\"checkbox\"\n        checked={isInfinityLoad}\n        onChange={handleCheckbox}\n      />\n    </CheckboxWrap>\n  );\n}\n\nLoadInfinityControl.propTypes = {\n  onCheckChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst ButtonScrollsTop = styled.a`\n  display: block;\n  position: fixed;\n  right: 5px;\n  bottom: 10px;\n  background-color: transparent;\n  cursor: pointer;\n  &:hover .icon {\n    color: green;\n  }\n`;\n\nexport { ButtonScrollsTop };\n","import React from 'react';\nimport { ButtonScrollsTop } from './StyledComponent';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleUp } from '@fortawesome/free-solid-svg-icons';\n\nexport default function ButtonScrollTop() {\n  return (\n    <ButtonScrollsTop href=\"#page-header\">\n      <FontAwesomeIcon\n        className=\"icon\"\n        icon={faChevronCircleUp}\n        color=\"grey\"\n        size=\"3x\"\n      />\n    </ButtonScrollsTop>\n  );\n}\n","import { Fragment, useState, useEffect } from 'react';\nimport PageHeader from './components/HeaderPage/HeaderPage';\nimport FormSearch from './components/FormSearch/FormSearch';\nimport Section from './components/Section/Section';\nimport ImageListRender from './components/ImagesListRender/ImagesListRender';\nimport ServiceApi from './service/ServiceApi';\nimport Spinner from './components/Spinner/Spinner';\nimport Notification from './components/Notification/Notification';\nimport ErrorInfo from './service/ErrorInfo';\nimport Modal from './components/Modal/Modal';\nimport ButtonLoadMore from './components/ButtonLoadMore/ButtonLoadMore';\nimport LoadInfinityControl from './components/LoadInfinityControl/LoadInfinityControl';\nimport ButtonScrollTop from './components/ButtonScrollTop/ButtonScrollTop';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [formSearch, setFormSearch] = useState('');\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [largeImgUrl, setLargeImgUrl] = useState(null);\n  const [isFullHits, setIsFullHits] = useState(false);\n  const [isInfinityScroll, setIsInfinityScroll] = useState(false);\n\n  useEffect(() => {\n    if (!formSearch) {\n      return;\n    }\n    fethApi();\n  }, [formSearch]);\n\n  useEffect(() => {\n    if (!isInfinityScroll) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [page]);\n\n  const registrationIntersectionObserver = () => {\n    const onEntries = (entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && formSearch !== '' && isInfinityScroll) {\n          console.log('object is intersecting');\n          fethApi();\n        }\n      });\n    };\n    const options = {\n      rootMargin: '200px',\n      threshold: 0.5,\n    };\n    const observerApi = new IntersectionObserver(onEntries, options);\n    const trackingObj = document.querySelector('#trackingObj');\n    observerApi.observe(trackingObj);\n  };\n\n  const fethApi = () => {\n    setLoading(true);\n    ServiceApi(formSearch, page)\n      .then(data => {\n        if (data.hits.length === 0) {\n          ErrorInfo();\n        }\n        if (images.length < data.total) {\n          setImages(prevImages => [...prevImages, ...data.hits]);\n          setPage(prevPage => prevPage + 1);\n          setIsFullHits(false);\n        } else {\n          setIsFullHits(true);\n        }\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const handlerFormSubmit = query => {\n    setFormSearch(query);\n    setPage(1);\n    setImages([]);\n    setIsFullHits(false);\n  };\n\n  const openModal = urlImgLarge => {\n    setLargeImgUrl(urlImgLarge);\n  };\n\n  const closeModal = () => {\n    setLargeImgUrl(null);\n  };\n\n  const handleCheckbox = checked => {\n    setIsInfinityScroll(checked);\n    registrationIntersectionObserver();\n  };\n\n  return (\n    <Fragment>\n      <PageHeader>\n        <FormSearch onSearch={handlerFormSubmit} />\n        <LoadInfinityControl onCheckChange={handleCheckbox} />\n      </PageHeader>\n      <main>\n        <Section>\n          {images.length > 0 && (\n            <ImageListRender imagesArr={images} onGetLargeImg={openModal} />\n          )}\n          {loading && <Spinner />}\n          {error && <Notification message={`Error loading:${error.message}`} />}\n          {!loading &&\n            images.length > 0 &&\n            !isFullHits &&\n            !isInfinityScroll && <ButtonLoadMore onLoad={fethApi} />}\n          <div id=\"trackingObj\" />\n          {images.length > 0 && <ButtonScrollTop />}\n        </Section>\n      </main>\n      {largeImgUrl && <Modal imgUrl={largeImgUrl} onCloseModal={closeModal} />}\n    </Fragment>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst KEY = '18487031-50da0da9ba31764b7f32dc2fc';\n\nexport default function ServiceApi(query, page) {\n  return axios\n    .get(\n      `${BASE_URL}?key=${KEY}&q=${query}&image_type=photo&page=${page}&orientation=horizontal&per_page=12`,\n    )\n    .then(response => response.data);\n}\n","import { info } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport '@pnotify/confirm/dist/PNotifyConfirm.css';\n\nexport default function ErrorInfo() {\n  return info({\n    title: 'The input is not correct',\n    text: 'Please input another request!!',\n    delay: 3000,\n  });\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport '@csstools/normalize.css';\nimport './base.css';\nimport App from './App';\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}